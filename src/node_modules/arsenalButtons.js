/*==============================================================================
 *  Title      : Arsenal buttons
 *  Author     : Digger (c) SAD-Systems <http://sad-systems.ru>
 *  Created on : 29.05.2016
 *==============================================================================
 */

//------------------------------------------------------------------------------
// Private
//------------------------------------------------------------------------------

var ToolButtons = require('toolButtons').theclass; 

//==============================================================================
// The Class
//==============================================================================

/**
 * Constructor
 * 
 * @param   {object} options    The JS object with initial class parameters
 * @returns {object}            A new instance of this class
 */
var ArsenalButtons = function (options) {
    
    //--------------------------------------------------------------------------
    // Config (override parent)
    //--------------------------------------------------------------------------    
    
    options = options || {};
    options = Phaser.Utils.extend(true, {
        
        mapManager       : null,
        frameControlName : 'Star',
        frameReadyName   : 'Ready',
        //frameDefaultName : 'Default',
        buttons          : {},
        length           : 3
        
    }, options);
    
    //--------------------------------------------------------------------------    
    
    //--- Add buttons:
    
    for (var i=0; i<options.length; i++) {
        options.buttons[i] = { onUp:options.onUp, onDown:options.onDown  };
    }
    
    //--------------------------------------------------------------------------    
    
    ToolButtons.apply(this, arguments);
    return this;

};

ArsenalButtons.prototype             = Object.create(ToolButtons.prototype);
ArsenalButtons.prototype.constructor = ArsenalButtons;

//------------------------------------------------------------------------------
// Config
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Protected
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Public
//------------------------------------------------------------------------------

ArsenalButtons.prototype.push = function (tile) {
    //console.log('Added to arsenal: ');
    var button;
    for (var i=0; i<this.length; i++) {
        button = this.buttons[i];
        if (!button.tile) {
            button.tile = tile;
            if (this.mapManager) {
                var sprite   = this.mapManager.makeSpriteFromTile(tile),
                    btn      = button.own;                               //<--- game button
                    sprite.x = btn.x + btn.width  *(0.5 - btn.anchor.x);
                    sprite.y = btn.y + btn.height *(0.5 - btn.anchor.y);
                    sprite.anchor.set(0.5);
                this.groupButtons.add(sprite);
                button.sprite = sprite;
                var farmaeName = this.frameReadyName + this.frameExt;
                try {
                    button.own.setFrames(farmaeName, farmaeName, farmaeName, farmaeName);
                } catch (e) {
                    console.log('BUG:[ArsenalButtons.prototype.push:button.setFrames]', e);
                };                    
            }
            break;
        }
    }
    //console.log(button);
};

ArsenalButtons.prototype.pop = function (tile) {
    //console.log('Removed from arsenal: ', tile);
    var button;
    for (var i=0; i<this.length; i++) {
        button = this.buttons[i];
        if (button.tile == tile) {
            var farmaeName = this.frameDefaultName + this.frameExt;
            
            try {
                button.own.setFrames(farmaeName, farmaeName, farmaeName, farmaeName);
            } catch (e) {
                console.log('BUG:[ArsenalButtons.prototype.pop:button.setFrames]', e);
            };

            //console.log('Removed button:', button);
            delete button.tile;
            button.sprite.destroy();
            break;
        }
    }
};

//==============================================================================
// Exports module values:
//==============================================================================

module.exports = {
    
    /**
     * The class to inherit
     * 
     * example:
     * 
     * function childClass() {
     *      theclass.apply(this, arguments);
     * }
     * 
     * childClass.prototype = Object.create(theclass.prototype);
     * childClass.prototype.constructor = childClass;
     * 
     */
    theclass: ArsenalButtons,
    
    create: function (options) { 
        return new ArsenalButtons(options); 
    },
    
    preload: function (game) {
        game.load.atlas('toolButtons', 'assets/sprites/controls/tools.png', 'assets/sprites/controls/tools.json');
    }
    
};