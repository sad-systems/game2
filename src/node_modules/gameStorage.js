/*==============================================================================
 *  Title      : Game storage
 *  Author     : Digger (c) SAD-Systems <http://sad-systems.ru>
 *  Created on : 18.06.2016
 *==============================================================================
 */

var localStorage   = require('localStorage'),
    stateStorage   = require('stateStorage').getInstance(),
    playerInstance = require('playerFactory').getInstance();

//--- Game data:
var data = {};

//--- Game name:
var storageName;

//==============================================================================
// Exports module values:
//==============================================================================

module.exports = {
    
    save: function (gameName) {
        
        //--- To pack collected goods:
        var collected = [];
        for (var i in playerInstance.collectedGoods) {
            var tile = playerInstance.collectedGoods[i];
            collected.push({
                layer :tile.layer.name,
                index :tile.index,
                x     :tile.x,
                y     :tile.y,
                width :tile.width,
                height:tile.height
            });
        }
        //--- Store the game data:
        data = {
            //--- Player:
            positionX : playerInstance.getPlayerX(),
            positionY : playerInstance.getPlayerY(),
            collected : collected,
            firestate : playerInstance.fireState,
            //--- Scene & Map:
            scene     : stateStorage.currentSceneName,
            map       : stateStorage.currentMapName,
            gamestate : stateStorage.getStorage()
        };
        localStorage.save(gameName, data);
        
    },
    
    load: function (gameName) {
        
        var savedGameData = localStorage.load(gameName);
        if (savedGameData) {
            Phaser.Utils.extend(true, this.init(), savedGameData);
            return data;
        } else {
            return false;
        }
        
    },
    
    apply: function () {
        
        //--- Scene & Map:
        stateStorage.setStorage(data.gamestate);
        stateStorage.lastGameMapName = data.map;
        //--- Player:
        playerInstance.fireState = data.firestate;
        //--- Position:
        if (data.positionX !== null) 
            playerInstance.lastGameX = data.positionX; 
        else 
            delete playerInstance.lastGameX; //<--- Do not set the position if NULL
        if (data.positionY !== null) 
            playerInstance.lastGameY = data.positionY; 
        else 
            delete playerInstance.lastGameY; //<--- Do not set the position if NULL
        //--- Collected goods:
        playerInstance.collectedGoods = [];
        //--- To unpack collected goods:
        for (var i in data.collected) {
            var tile = data.collected[i];
            playerInstance.collectedGoods.push(new Phaser.Tile({name:tile.layer}, tile.index, tile.x, tile.y, tile.width, tile.height)); 
        }

    },
    
    init: function () {
        
        data = {
    
            //--- Scene & Map:
            scene       : '',
            map         : null,
            gamestate   : {},
            //--- Player:
            positionX   : null,
            positionY   : null,
            firestate   : 0,
            collected   : []

        };
        
        return data;

    },
    
    reset: function () {
        
        this.init();
        this.apply();
        
    }

};