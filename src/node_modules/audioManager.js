/*==============================================================================
 *  Title      : Audio Manager
 *  Author     : Digger (c) SAD-Systems <http://sad-systems.ru>
 *  Created on : 19.06.2016
 *==============================================================================
 */

var audioPlayer = require('audioPlayer');

//------------------------------------------------------------------------------
// Private
//------------------------------------------------------------------------------


//==============================================================================
// The Class
//==============================================================================

/**
 * Constructor
 * 
 * @param   {object} options    The JS object with initial class parameters
 * @returns {object}            A new instance of this class
 */
var AudioManager = function (game, options) {

    this.game        = game;
    this.musicEnable = true;
    this.soundEnable = true;
    
    this._init(options);
    
    this.music = audioPlayer.create(game, {single:true});
    this.sound = audioPlayer.create(game, {single:false});
    
    this.setMusicState(this.musicEnable);
    this.setSoundState(this.soundEnable);
    
    return this;

};

AudioManager.prototype = {
//------------------------------------------------------------------------------
// Config
//------------------------------------------------------------------------------

    param1: null,
    
//------------------------------------------------------------------------------
// Protected
//------------------------------------------------------------------------------

    /**
     * Initialization
     * 
     * @protected
     * @param {object} options  The JS object with initial class parameters
     */
    _init: function (options) {

        //--- Extend the instance:
        Phaser.Utils.extend(true, this, options); // by Phaser

    },

//------------------------------------------------------------------------------
// Public
//------------------------------------------------------------------------------

    getMusicState: function () {
        return this.music.getEnable();
    },
    
    getSoundState: function () {
        return this.sound.getEnable();
    },
    
    setMusicState: function (state) {
        this.music.setEnable(state);
    },
    
    setSoundState: function (state) {
        this.sound.setEnable(state);
    },
    
    toggleMusicState: function () {
        return this.music.toggleEnable();
    },
    
    toggleSoundState: function () {
        return this.sound.toggleEnable();
    }

};

//==============================================================================
// Exports module values:
//==============================================================================

module.exports = {
    
    /**
     * The class to inherit
     * 
     * example:
     * 
     * function childClass() {
     *      theclass.apply(this, arguments);
     * }
     * 
     * childClass.prototype = Object.create(theclass.prototype);
     * childClass.prototype.constructor = childClass;
     * 
     */
    theclass: AudioManager,
    
    /**
     * The class factory
     * 
     * @param   {object} options The JS object with initial class parameters
     * @returns {object}         A new instance of this class
     */
    create: function (game, options) {

        return new AudioManager(game, options);

    }

};